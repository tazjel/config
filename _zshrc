# command aliases {{{
#alias macvim='open /Users/ujihisa/src/MacVim-snapshot-49/MacVim.app'
#alias macvim='open /Users/ujihisa/git/MacVim/src/MacVim/build/Release/MacVim.app'
#alias al='~/.cabal/bin/cabal'
alias al=cabal
alias reload='exec zsh'
alias screen='echo use sr'

alias mysqld_start='sudo /opt/local/share/mysql5/mysql/mysql.server start'
alias gosh='rlwrap /opt/local/bin/gosh'
alias ghci='rlwrap --always-readline ghci'
alias js="js -e 'Function.prototype.toString = function() { return this() };' -i"

alias gl='git pull --rebase'
alias pus='git push'
alias c='git checkout'
alias b='git branch'
alias gsrd='git svn rebase && git svn dcommit'

alias rakeg='growlnotify -n vim -m "rake started"; rake | growlnotify -n vim &'
alias rawvim='vim -u NONE -U NONE --noplugin'
alias gauchedoc='info --vi-keys gauche-refe'
alias pingg='ping google.com'

# }}}

# ssh aliases {{{
alias ssh_hootsuite='ssh uji@dev.hootsuitemedia.com'
alias ssh_virtualbox='ssh -p 2222 localhost'
#alias ssh_kami='ssh ujihisa@72.55.171.57'
#alias ssh_devkami='ssh dev01.kamilabo.jp'
#alias ssh_kamidev2='ssh dev02.kamilabo.jp' # This async is intentional for compl
#alias ssh_terrsa_in='ssh 192.168.1.22'
#alias ssh_think_in='ssh 192.168.1.21'
#alias ssh_necma_in='ssh 192.168.1.20'
#alias ssh_terrsa_out='ssh -p 2000 219.23.140.27'
#alias ssh_ikomastation_in='ssh 192.168.1.12'
#alias ssh_ikomastation_out='ssh 218.183.125.77'
#alias ssh_sharestyle='ssh sharestyle.com'
#alias ssh_sanjone_in_home='ssh -p 2022 192.168.1.20'
#alias ssh_sanjone_in_lab='ssh 192.168.25.5'
#alias ssh_sanjone_out='ssh -p 2022 219.23.140.27'
#alias ssh_terrsa='ssh -p 2000 219.23.140.27'
# for lab machines
# alias ssh_shapley="ssh inulab@192.168.25.221"
# alias ssh_nash="ssh inulab@192.168.25.222"
# alias ssh_gomory="ssh calculate@192.168.25.223"
# alias ssh_matlab="ssh calculate@192.168.25.224"
#alias ssh_shien='ssh 124.108.36.82'
#alias ssh_neumann='ssh 192.168.25.62'
#alias ssh_slicehost='ssh 67.23.4.19'
#alias ssh_vmware='ssh 192.168.183.128'
# }}}

export PATH=$PATH:~/bin/
# labp :: Boolean {{{
#function labp() {
#  [ `ifconfig | grep 192.168.25 | wc -l` != 0 ]
#}
# }}}
case "${OSTYPE}" in
freebsd*|darwin*) # OSX {{{
  export LESSCHARSET='utf-8'
  export LANG=en_US.UTF-8
  alias cp='cp -i'
  #alias rm='rm -i'
  alias mv='mv -i'
  alias ls='ls -GFw'
  alias ll='ls -lw'
  alias la='ls -aw'
  alias le='less'
  alias cddu='cd ~/Documents/uvn'
  alias cdb='cd /Users/ujihisa/Documents/rrm/rubydoc/refm/api/src/_builtin'
  alias cdg='cd /opt/local/lib/ruby/gems/1.8/gems'
  alias cdr='cd ~/Documents/rubyforge'
  alias less='lv'
  alias cote="/usr/bin/open -a /Applications/CotEditor.app"
  alias ..='cd .. && ls'
  alias ...='cd ../.. && ls'
  alias wget='wget --user-agent=Mozilla'
  alias mysql='mysql5'
  alias lv='lv -c'
  export PATH=/opt/local/bin:/opt/local/sbin:$PATH
  export MANPATH=/opt/local/man:$MANPATH
  alias sr='command screen -r || command screen -AU'

  autoload -U compinit
  compinit

  autoload colors
  colors
  autoload predict-on
  setopt complete_aliases # aliased ls needs if file/dir completions work

  #export EDITOR='/opt/local/bin/vim'
  export EDITOR='vim'
  bindkey -v

  alias gnuplot="/Applications/MacPorts/AquaTerm.app/Contents/MacOS/AquaTerm &; gnuplot"

  case "${OSTYPE}" in
  darwin*)
    alias port-out="sudo port sync -d && sudo port outdated"
    alias port-upall="sudo port sync -d && sudo port upgrade outdated"
    alias port-up="sudo port upgrade"
    #alias updateports="sudo port selfupdate; sudo port outdated"
    #alias portupgrade="sudo port upgrade installed"
    ;;
  freebsd*)
    case ${UID} in
    0)
      updateports() 
      {
        if [ -f /usr/ports/.portsnap.INDEX ]
        then
            portsnap fetch update
        else
            portsnap fetch extract update
        fi
        (cd /usr/ports/; make index)

        portversion -v -l \<
      }
      alias appsupgrade='pkgdb -F && BATCH=YES NO_CHECKSUM=YES portupgrade -a'
      ;;
    esac
    ;;
  esac

  # by http://d.hatena.ne.jp/babie/20051110
  #PS1=$'%{\e]2;[%n@%m:%~]\a'$'\e]1;%%: %~\a%}'$'%{\e[00;04;32m%}%~%{\e[00m%}\n[%{\e[$00;37m%}%n@%m${WINDOW:+":$WINDOW"}%{\e[00m%}]# '

  #PS1=$'%{\e]2;[%n@%m:%~]\a'$'\e]1;%%: %~\a%}'$'%{\e[00;04;32m%}%~%{\e[00m%}\n%{\e[00;32m%}[%n@%m%{\e[00;32m%}]$ '
  #if labp; then
  #  PS1=$'%{\e[00;00;32m%}%~%{\e[00m%}\n%{\e[00;04;32m%}[%n@%m]%{\e[00;00;32m%}%% '
  #else
    PS1=$'%{\e[00;00;32m%}%~%{\e[00m%}\n%{\e[00;04;32m%}[%n@%m]%{\e[00;00;32m%}$ '
  #fi


  RPS1=$'%{\e[00;04;32m%}[%D{%H}:%D{%M}:%D{%S}]%{\e[00m%}'

  # histories
  #   http://journal.mycom.co.jp/column/zsh/003/index.html
  HISTFILE=~/.zsh_history
  HISTSIZE=100000
  SAVEHIST=100000
  setopt hist_ignore_dups     # ignore duplication command history list
  setopt share_history        # share command history data 


  # alias r18='/Users/ujihisa/Documents/uvn/workshops/ruby/18'
  # export HREF_DATADIR='/usr/local/src/href-0.3.3'

  function svn() {
    if [ $1 = "dil" ] ; then
      command svn di $2 | diffcolor.rb | /usr/bin/less -RE
    else
      command svn $*
    fi
  }

  autoload history-search-end
  zle -N history-beginning-search-backward-end history-search-end
  zle -N history-beginning-search-forward-end history-search-end
  bindkey '^N' history-beginning-search-backward-end
  bindkey '^P' history-beginning-search-forward-end
  bindkey '^F' history-incremental-search-backward

  export __CF_USER_TEXT_ENCODING='0x1F6:0x08000100:14'

  ;; # }}}
linux*|cygwin*) # LINUX {{{
  alias ls="ls --color"
  alias aptup="sudo aptitude update && sudo aptitude full-upgrade -y"
  export PATH=$PATH:/var/lib/gems/1.8/bin
  export PATH=$PATH:/sbin
  export PATH=/opt/ptexlive/bin/:$PATH
  export GIT_PAGER='less -RE'
  ## Environment variable configuration
  #
  # LANG
  #
  export LANG=C
  export LC_ALL=C
  export EDITOR='vim'


  ## Default shell configuration
  #
  # set prompt
  #
  autoload colors
  colors
  case ${UID} in
  0)
      PROMPT="%B%{${fg[red]}%}%/#%{${reset_color}%}%b "
      PROMPT2="%B%{${fg[red]}%}%_#%{${reset_color}%}%b "
      SPROMPT="%B%{${fg[red]}%}%r is correct? [n,y,a,e]:%{${reset_color}%}%b "
      [ -n "${REMOTEHOST}${SSH_CONNECTION}" ] && 
          PROMPT="%{${fg[cyan]}%}$(echo ${HOST%%.*} | tr '[a-z]' '[A-Z]') ${PROMPT}"
      ;;
  *)
      PROMPT="%{${fg[red]}%}%/%%%{${reset_color}%} "
      PROMPT2="%{${fg[red]}%}%_%%%{${reset_color}%} "
      SPROMPT="%{${fg[red]}%}%r is correct? [n,y,a,e]:%{${reset_color}%} "
      [ -n "${REMOTEHOST}${SSH_CONNECTION}" ] && 
          PROMPT="%{${fg[cyan]}%}$(echo ${HOST%%.*} | tr '[a-z]' '[A-Z]') ${PROMPT}"
      ;;
  esac

  # auto change directory
  #
  setopt auto_cd

  # auto directory pushd that you can get dirs list by cd -[tab]
  #
  setopt auto_pushd

  # command correct edition before each completion attempt
  #
  setopt correct

  # compacked complete list display
  #
  setopt list_packed

  # no remove postfix slash of command line
  #
  setopt noautoremoveslash

  # no beep sound when complete list displayed
  #
  setopt nolistbeep


  ## Keybind configuration
  #
  # emacs like keybind (e.x. Ctrl-a goes to head of a line and Ctrl-e goes 
  #   to end of it)
  #
  bindkey -v

  # historical backward/forward search with linehead string binded to ^P/^N
  #
  autoload history-search-end
  zle -N history-beginning-search-backward-end history-search-end
  zle -N history-beginning-search-forward-end history-search-end
  bindkey "^p" history-beginning-search-backward-end
  bindkey "^n" history-beginning-search-forward-end
  bindkey "\\ep" history-beginning-search-backward-end
  bindkey "\\en" history-beginning-search-forward-end

  bindkey "[A" history-beginning-search-backward-end
  bindkey "[B" history-beginning-search-forward-end


  ## Command history configuration
  #
  HISTFILE=~/.zsh_history
  HISTSIZE=10000
  SAVEHIST=10000
  setopt hist_ignore_dups     # ignore duplication command history list
  setopt share_history        # share command history data


  ## Completion configuration
  #
  fpath=(~/.zsh/functions/Completion ${fpath})
  autoload -U compinit
  compinit -u


  ## zsh editor
  #
  autoload zed


  ## Prediction configuration
  #
  #autoload predict-on
  #predict-off


  ## Alias configuration
  #
  # expand aliases before completing
  #
  setopt complete_aliases     # aliased ls needs if file/dir completions work

  alias where="command -v"
  alias j="jobs -l"

  alias la="ls -a"
  alias lf="ls -F"
  alias ll="ls -l"

  alias du="du -h"
  alias df="df -h"

  alias su="su -l"

  ## terminal configuration
  #
  unset LSCOLORS
  case "${TERM}" in
  xterm)
      export TERM=xterm-color
      ;;
  kterm)
      export TERM=kterm-color
      # set BackSpace control character
      stty erase
      ;;
  cons25)
      unset LANG
      export LSCOLORS=ExFxCxdxBxegedabagacad
      export LS_COLORS='di=01;34:ln=01;35:so=01;32:ex=01;31:bd=46;34:cd=43;34:su=41;30:sg=46;30:tw=42;30:ow=43;30'
      zstyle ':completion:*' list-colors \
          'di=;34;1' 'ln=;35;1' 'so=;32;1' 'ex=31;1' 'bd=46;34' 'cd=43;34'
      ;;
  esac

  # set terminal title including current directory
  #
  case "${TERM}" in
  kterm*|xterm*)
      precmd() {
          echo -ne "\033]0;${USER}@${HOST%%.*}:${PWD}\007"
      }
      export LSCOLORS=exfxcxdxbxegedabagacad
      export LS_COLORS='di=34:ln=35:so=32:pi=33:ex=31:bd=46;34:cd=43;34:su=41;30:sg=46;30:tw=42;30:ow=43;30'
      zstyle ':completion:*' list-colors \
          'di=34' 'ln=35' 'so=32' 'ex=31' 'bd=46;34' 'cd=43;34'
      ;;
  esac


  ## load user .zshrc configuration file
  #
  [ -f ~/.zshrc.mine ] && source ~/.zshrc.mine

  alias start_sshd="/usr/sbin/sshd -d"
  alias start_sshd_ten_times="start_sshd && start_sshd && start_sshd && start_sshd && start_sshd && start_sshd && start_sshd && start_sshd "

  #export PATH=$PATH:~/repos_ruby/said/trunk
  #export PATH=$PATH:~/repos_ruby/misc
  alias heyi="hey 192.168.25.2 inulab"
  function svn() {
    if [ $1 = "dil" ] ; then
      command svn di $2 | diffcolor.rb | /usr/bin/less -RE
    else
      command svn $*
    fi
  }
  bindkey '^[[3~' backward-delete-char
  bindkey '' backward-delete-char

  export LESSCHARSET=utf-8
  #alias sr='TERM=kterm command screen -r ||TERM=kterm  command screen -AU'
  alias sr='command screen -r || command screen -AU'

  ;; # }}}
esac

function safaritab() {
  # http://www.tuaw.com/2008/09/08/terminal-tips-force-safari-to-open-all-links-in-new-tab/
  # Give me true or false.
  # Default behavior is "false"
  defaults write com.apple.Safari TargetedClicksCreateTabs -bool $1
  echo "restart Safari"
}

# VCS supports {{{
alias gss='git stash save'
alias gsp='git stash pop'
function s() {
  local -A result

  result=`git status 2> /dev/null`
  if [ "$result" ] ; then
    echo $result
    return
  fi

  svn status
}
function d() {
  local -A result

  result=`git status 2> /dev/null`
  if [ "$result" ] ; then
    result=`git diff --cached`
    if [ "$result" ] ; then
      git diff --no-prefix --cached --color --color-words | /usr/bin/less -RE
    else
      git diff --no-prefix --color --color-words | /usr/bin/less -RE
    fi
    return
  fi

  svn di | diffcolor.rb | /usr/bin/less -RE
}
function l() {
  local -A result

  result=`git status 2> /dev/null`
  if [ "$result" ] ; then
    if [ "$1" = "u" ]; then
      #git log -u --color
      git log -p --stat
    else
      git l
    fi
    return
  fi
  echo '(loading...)'
  svn log -v --limit 10 | /usr/bin/less -RE
}
# }}}

# for cdd
source ~/bin/cdd.zsh
function chpwd() {
  _reg_pwd_screennum
}

# for yarm
source ~/bin/yarm.zsh

# paths
#export PATH=$PATH:~/coderepos/ruby/misc
export PATH=~/.gem/ruby/1.8/bin:$PATH
export PATH=~/.gem/ruby/1.9/bin:$PATH
export PATH=~/.cabal/bin:$PATH
export PATH=~/src/javacc-5.0/bin:$PATH
export PATH=~/src/llvm/usr/bin:$PATH
export PATH=~/git/cbc/usr/bin:$PATH
export PATH=~/git/epitaph/bin:$PATH
export PATH=$PATH:~/appengine-java-sdk-1.2.1/bin
export PATH=$PATH:~/android-sdk-mac_x86-1.5_r2/tools/
export PATH=$PATH:~/git/termtter/bin
export PATH=$PATH:~/.gem/ruby/1.9.1/bin
export PATH=$PATH:~/bin/scala-2.6.0-final/
export PATH=/usr/local/bin:$PATH:
#export PATH=$PATH:~/rubies/bin
#export PATH=~/git/ruby/local/bin:$PATH
export PATH=~/git/jruby/bin:$PATH # jruby must come earlier than other rubies because it has "gem" command
export PATH=~/git/ruby193/local/bin:$PATH
export PATH=~/git/ruby187/local/bin:$PATH
export PATH=~/git/ruby192/local/bin:$PATH
export PATH=$PATH:~/git/rubinius/local/bin
export PATH=$PATH:~/git/node/local/bin
export PATH=$PATH:~/git/coffee-script/local/bin

if [ -e /Applications/GoogleAppEngineLauncher.app/Contents/Resources/GoogleAppEngine-default.bundle/Contents/Resources/google_appengine ]; then
  export PATH=$PATH:/Applications/GoogleAppEngineLauncher.app/Contents/Resources/GoogleAppEngine-default.bundle/Contents/Resources/google_appengine
fi

export PYTHONSTARTUP=/Users/ujihisa/.pythonrc.py
alias pt=python

function pasg() {
  if [ -e ~/Documents/uvn/passwords.txt ] ; then
    grep -5 -i $* ~/Documents/uvn/passwords.txt
  else
    grep -5 -i $* ~/passwords.txt
  fi
}

function cady() { # {{{
  local filename; filename=$1
  local input; input=$2
  local expect; expect=$3
  local output;
  if [ -e $input ]; then
    output=`ruby $filename $input`
  else
    output=`echo $input | ruby $filename`
  fi
  if [ $output = $expect ]; then
    echo "ok"
  else
    echo "ng"
  fi
} # }}}

zstyle ':completion:*:*:vim:*:*files' ignored-patterns '*?.(pdf|o)'

# cho45 ~/
expand-to-home-or-insert () {
  if [ "$LBUFFER" = "" -o "$LBUFFER[-1]" = " " ]; then
    LBUFFER+="~/"
  else
    zle self-insert
  fi
}
zle -N expand-to-home-or-insert
bindkey "\\"  expand-to-home-or-insert

export GIT_EDITOR=/usr/bin/vim
export PAGER='less'
alias -g L="| $PAGER"
alias -g G="| grep"
alias -g T='| tail'
alias -g H='| head'
alias -g F="| ruby /Users/ujihisa/git/few/bin/few"
alias -g P="| pbcopy"

# kana's nice tool
function git-gol() {
  for i in $(git log --pretty=oneline | head -n 10 | tail -r | cut -d ' ' -f 1); do git show $i --color-words; done | less
}
function git-gol-full() {
  for i in $(git log --pretty=oneline | tail -r | cut -d ' ' -f 1); do git show $i --color-words; done | less
}

function lprweb() {
  xulrunner-1.9 /tmp/mozilla2ps/application.ini $1 /tmp/lprweb.ps \
    -margins 0.25 -papername A4 -bgcolors true -bgimages true
  lpr /tmp/lprweb.ps
  rm /tmp/lprweb.ps
}

function githubinitial() {
  git config --add branch.master.remote origin
  git config --add branch.master.merge refs/heads/master
}
function rubyup() {
  local now
  now=`pwd`
  cd ~/git/ruby-trunk
  git svn rebase
  cd spec/mspec
  git pull --rebase
  cd ../rubyspec
  git pull --rebase
  cd $now
}

function mspecci() {
  rt=~/git/ruby-trunk
  #/usr/bin/ruby ${rt}/spec/mspec/bin/mspec ci -t ${rt}/ruby19/bin/ruby
  /usr/bin/ruby ${rt}/spec/mspec/bin/mspec ci -t ~/rubies/bin/ruby192 -fs
}

# kana's prompt git branch {{{
function prompt-git-head-name() {
  local git_dir="$(git rev-parse --git-dir 2>/dev/null)"
  if [ -z "$git_dir" ]; then
    return 1
  fi
  local head_name=''
  local additional_info=''
  if [ -d "$git_dir/rebase-apply" ]; then
    if [ -f "$git_dir/rebase-apply/rebasing" ]; then
      additional_info="REBASE"
    elif [ -f "$git_dir/rebase-apply/applying" ]; then
      additional_info="AM"
    else
      additional_info="AM/REBASE"
    fi
    head_name="$(git symbolic-ref HEAD 2>/dev/null)"
  elif [ -f "$git_dir/rebase-merge/interactive" ]; then
    additional_info="REBASE-i"
    head_name="$(< "$git_dir/rebase-merge/head-name")"
  elif [ -d "$git_dir/rebase-merge" ]; then
    additional_info="REBASE-m"
    head_name="$(< "$git_dir/rebase-merge/head-name")"
  elif [ -f "$git_dir/MERGE_HEAD" ]; then
    additional_info="MERGING"
    head_name="$(git symbolic-ref HEAD 2>/dev/null)"
  fi
  if [ -z "$head_name" ]; then
    head_name="$(git branch | sed -e 's/^\* //;t;d')"
    if [ "$head_name" = '(no branch)' ]; then
      # "git branch" doesn't show the correct name of a branch after
      # "git checkout {commitish-and-not-the-head-of-a-branch}",
      # so we have to use another method to get the name of {commitish}.
      head_name="($(
        {
          fgrep 'checkout: moving from ' .git/logs/HEAD |
          sed '$s/^.* to \([^ ]*\)$/\1/;t;d'
        } 2>/dev/null
      ))"
    elif [ "$head_name" = '' ]; then
      head_name='(just initialized; nothing commited)'
    fi
  else
    head_name="${head_name##refs/heads/}"
  fi
  if [ -n "$additional_info" ]; then
    additional_info="|$additional_info"
  fi

  echo " [$head_name$additional_info]"
  return 0
} # }}}

# sudo gem wrapper {{{
function sudo() {
  if [ $1 = "gem" ]; then
    echo "Use gem without sudo!"
  else
    command sudo $*
  fi
}
# }}}

# __END__  {{{1
# vim: expandtab softtabstop=2 shiftwidth=2
# vim: foldmethod=marker
# vim: ft=zsh
if [ -s ~/.rvm/scripts/rvm ] ; then source ~/.rvm/scripts/rvm ; fi
